package algorithms

/*
堆的基本结构：是一个完全二叉树，也就是除了最后一层节点外，上层节点都是非空的,最后一层节点是从左到右依次排布的
堆满足一个性质，以小根堆为例，每一个节点都小于等于它的左右儿子,根节点是整个数据结构的最小值。

如何手写一个小根堆
堆的存储：用一个一维数组，根节点坐标设为从x=1开始 节点的左儿子index=2x,右儿子index=2x+1

堆的操作(小根堆为例)：
1.插入一个数				heap[++size]=x;up(size)
2.求集合中的最小值			heap[1]
3.删除最小值				heap[1]=heap[size] ;size--;down(1);  用整个堆的元素来覆盖堆顶的元素再把最后一个元素删除，然后down(1)一遍
4.删除任意一个元素			heap[k]=heap[size] ;size--;down(k);up(x); 与上同理
5.修改任意一个元素			heap[k]=x;down(k);up(k);

都可以由两个函数实现：
down(x){
	节点往下调整
}
up(x){
	节点往上调整
}
*/
